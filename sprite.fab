//misc sprite stuff

//this game uses few enough sprites that I can dedicate sprite indices to specific things.
ct U SPR_LEFT_LEG_1 =     $00
ct U SPR_LEFT_LEG_2 =     $04
ct U SPR_LEFT_LEG_3 =     $08
ct U SPR_LEFT_LEG_4 =     $0C
ct U SPR_RIGHT_LEG_1 =    $10
ct U SPR_RIGHT_LEG_2 =    $14
ct U SPR_RIGHT_LEG_3 =    $18
ct U SPR_RIGHT_LEG_4 =    $1C
ct U SPR_LEFT_ARM_1 =     $20
ct U SPR_LEFT_ARM_2 =     $24
ct U SPR_LEFT_ARM_3 =     $28
ct U SPR_LEFT_ARM_4 =     $2C
ct U SPR_LEFT_ARM_5 =     $30
ct U SPR_RIGHT_ARM_1 =    $34
ct U SPR_RIGHT_ARM_2 =    $38
ct U SPR_RIGHT_ARM_3 =    $3C
ct U SPR_RIGHT_ARM_4 =    $40
ct U SPR_RIGHT_ARM_5 =    $44
ct U SPR_BALL1_1 =        $48
ct U SPR_BALL1_2 =        $4C
ct U SPR_BALL2_1 =        $50
ct U SPR_BALL2_2 =        $54
ct U SPR_BALL3_1 =        $58
ct U SPR_BALL3_2 =        $5C

struct Position 
    U x
    U y

struct SpriteDef
    Position pos
    U tile

//sprite def for left leg in down position.
//variable name is bad to make the lines in redraw_arms_and_legs() not so long
ct SpriteDef[4] sdef_legl_dn = SpriteDef[4]( 
    SpriteDef(Position($68,$BF),$0F),
    SpriteDef(Position($70,$BF),$0B),
    SpriteDef(Position($70,$B7),$01),
    SpriteDef(Position($68,$B3),$0A)
)

ct SpriteDef[4] sdef_legr_dn = SpriteDef[4](
    SpriteDef(Position($88,$BF),$07),
    SpriteDef(Position($90,$BF),$0F),
    SpriteDef(Position($8C,$B7),$01),
    SpriteDef(Position($8C,$B3),$0A)
)

ct SpriteDef[4] sdef_legl_up = SpriteDef[4]( 
    SpriteDef(Position($5C,$AF),$0F),
    SpriteDef(Position($60,$B3),$07),
    SpriteDef(Position($68,$AF),$09),
    SpriteDef(Position($00,$00),$00) //unused
)

ct SpriteDef[4] sdef_legr_up = SpriteDef[4](
    SpriteDef(Position($90,$AF),$06),
    SpriteDef(Position($98,$B3),$0B),
    SpriteDef(Position($9C,$AF),$0F),
    SpriteDef(Position($00,$00),$00) //unused
)

//sprite def for left arm in middle position
ct SpriteDef[5] sdef_larm_m = SpriteDef[5](
    SpriteDef(Position($48,$9F),$0A),
    SpriteDef(Position($48,$97),$05),
    SpriteDef(Position($40,$8F),$0A),
    SpriteDef(Position($44,$8B),$0B),
    SpriteDef(Position($3C,$8B),$0E)
)

ct SpriteDef[5] sdef_rarm_m = SpriteDef[5](
    SpriteDef(Position($B0,$9F),$05),
    SpriteDef(Position($B0,$97),$0A),
    SpriteDef(Position($B8,$8F),$05),
    SpriteDef(Position($BC,$8B),$0D),
    SpriteDef(Position($B4,$8B),$07)
)

ct SpriteDef[5] sdef_larm_l = SpriteDef[5](
    SpriteDef(Position($48,$A3),$06),
    SpriteDef(Position($40,$9B),$06),
    SpriteDef(Position($38,$93),$06),
    SpriteDef(Position($34,$8F),$0B),
    SpriteDef(Position($2C,$8F),$0E)
)

ct SpriteDef[5] sdef_rarm_l = SpriteDef[5](
    SpriteDef(Position($AC,$9F),$04),
    SpriteDef(Position($AC,$97),$05),
    SpriteDef(Position($A4,$8F),$0A),
    SpriteDef(Position($AC,$87),$0D),
    SpriteDef(Position($A4,$87),$07)
)

ct SpriteDef[5] sdef_larm_r = SpriteDef[5](
    SpriteDef(Position($4C,$9F),$08),
    SpriteDef(Position($50,$97),$05),
    SpriteDef(Position($50,$8F),$0A),
    SpriteDef(Position($54,$87),$0B),
    SpriteDef(Position($4C,$87),$0E)
)

ct SpriteDef[5] sdef_rarm_r = SpriteDef[5](
    SpriteDef(Position($B0,$A3),$09),
    SpriteDef(Position($B8,$9B),$09),
    SpriteDef(Position($C0,$93),$09),
    SpriteDef(Position($CC,$8F),$0D),
    SpriteDef(Position($C4,$8F),$07)
)

fn update_sprites()
    if game_state != GAME_STATE_IDLE
        redraw_arms_and_legs()
        redraw_balls()

//The arms and legs are drawn with sprites. 
//Sprite positions are redrawn each frame for no reason other than it being the easiest way to do it.
fn redraw_arms_and_legs()
    
    switch arms_pos
        case ARMS_MIDDLE
            //draw both legs down
            //index, x, y, pal+tile, flags
            set_oam(SPR_LEFT_LEG_1, sdef_legl_dn[0].pos.x, sdef_legl_dn[0].pos.y, sdef_legl_dn[0].tile, 0)
            set_oam(SPR_LEFT_LEG_2, sdef_legl_dn[1].pos.x, sdef_legl_dn[1].pos.y, sdef_legl_dn[1].tile, 0)
            set_oam(SPR_LEFT_LEG_3, sdef_legl_dn[2].pos.x, sdef_legl_dn[2].pos.y, sdef_legl_dn[2].tile, 0)
            set_oam(SPR_LEFT_LEG_4, sdef_legl_dn[3].pos.x, sdef_legl_dn[3].pos.y, sdef_legl_dn[3].tile, 0)

            set_oam(SPR_RIGHT_LEG_1, sdef_legr_dn[0].pos.x, sdef_legr_dn[0].pos.y, sdef_legr_dn[0].tile, 0)
            set_oam(SPR_RIGHT_LEG_2, sdef_legr_dn[1].pos.x, sdef_legr_dn[1].pos.y, sdef_legr_dn[1].tile, 0)
            set_oam(SPR_RIGHT_LEG_3, sdef_legr_dn[2].pos.x, sdef_legr_dn[2].pos.y, sdef_legr_dn[2].tile, 0)
            set_oam(SPR_RIGHT_LEG_4, sdef_legr_dn[3].pos.x, sdef_legr_dn[3].pos.y, sdef_legr_dn[3].tile, 0)
            
            //draw arms in center
            set_oam(SPR_LEFT_ARM_1, sdef_larm_m[0].pos.x, sdef_larm_m[0].pos.y, sdef_larm_m[0].tile, 0)
            set_oam(SPR_LEFT_ARM_2, sdef_larm_m[1].pos.x, sdef_larm_m[1].pos.y, sdef_larm_m[1].tile, 0)
            set_oam(SPR_LEFT_ARM_3, sdef_larm_m[2].pos.x, sdef_larm_m[2].pos.y, sdef_larm_m[2].tile, 0)
            set_oam(SPR_LEFT_ARM_4, sdef_larm_m[3].pos.x, sdef_larm_m[3].pos.y, sdef_larm_m[3].tile, 0)
            set_oam(SPR_LEFT_ARM_5, sdef_larm_m[4].pos.x, sdef_larm_m[4].pos.y, sdef_larm_m[4].tile, 0)

            set_oam(SPR_RIGHT_ARM_1, sdef_rarm_m[0].pos.x, sdef_rarm_m[0].pos.y, sdef_rarm_m[0].tile, 0)
            set_oam(SPR_RIGHT_ARM_2, sdef_rarm_m[1].pos.x, sdef_rarm_m[1].pos.y, sdef_rarm_m[1].tile, 0)
            set_oam(SPR_RIGHT_ARM_3, sdef_rarm_m[2].pos.x, sdef_rarm_m[2].pos.y, sdef_rarm_m[2].tile, 0)
            set_oam(SPR_RIGHT_ARM_4, sdef_rarm_m[3].pos.x, sdef_rarm_m[3].pos.y, sdef_rarm_m[3].tile, 0)
            set_oam(SPR_RIGHT_ARM_5, sdef_rarm_m[4].pos.x, sdef_rarm_m[4].pos.y, sdef_rarm_m[4].tile, 0)
            break
        case ARMS_LEFT
            //draw left leg down and right leg up
            //index, x, y, pal+tile, flags
            set_oam(SPR_LEFT_LEG_1, sdef_legl_dn[0].pos.x, sdef_legl_dn[0].pos.y, sdef_legl_dn[0].tile, 0)
            set_oam(SPR_LEFT_LEG_2, sdef_legl_dn[1].pos.x, sdef_legl_dn[1].pos.y, sdef_legl_dn[1].tile, 0)
            set_oam(SPR_LEFT_LEG_3, sdef_legl_dn[2].pos.x, sdef_legl_dn[2].pos.y, sdef_legl_dn[2].tile, 0)
            set_oam(SPR_LEFT_LEG_4, sdef_legl_dn[3].pos.x, sdef_legl_dn[3].pos.y, sdef_legl_dn[3].tile, 0)

            set_oam(SPR_RIGHT_LEG_1, sdef_legr_up[0].pos.x, sdef_legr_up[0].pos.y, sdef_legr_up[0].tile, 0)
            set_oam(SPR_RIGHT_LEG_2, sdef_legr_up[1].pos.x, sdef_legr_up[1].pos.y, sdef_legr_up[1].tile, 0)
            set_oam(SPR_RIGHT_LEG_3, sdef_legr_up[2].pos.x, sdef_legr_up[2].pos.y, sdef_legr_up[2].tile, 0)
            set_oam(SPR_RIGHT_LEG_4, sdef_legr_up[3].pos.x, sdef_legr_up[3].pos.y, sdef_legr_up[3].tile, 0)

            //draw arms on left
            set_oam(SPR_LEFT_ARM_1, sdef_larm_l[0].pos.x, sdef_larm_l[0].pos.y, sdef_larm_l[0].tile, 0)
            set_oam(SPR_LEFT_ARM_2, sdef_larm_l[1].pos.x, sdef_larm_l[1].pos.y, sdef_larm_l[1].tile, 0)
            set_oam(SPR_LEFT_ARM_3, sdef_larm_l[2].pos.x, sdef_larm_l[2].pos.y, sdef_larm_l[2].tile, 0)
            set_oam(SPR_LEFT_ARM_4, sdef_larm_l[3].pos.x, sdef_larm_l[3].pos.y, sdef_larm_l[3].tile, 0)
            set_oam(SPR_LEFT_ARM_5, sdef_larm_l[4].pos.x, sdef_larm_l[4].pos.y, sdef_larm_l[4].tile, 0)

            set_oam(SPR_RIGHT_ARM_1, sdef_rarm_l[0].pos.x, sdef_rarm_l[0].pos.y, sdef_rarm_l[0].tile, 0)
            set_oam(SPR_RIGHT_ARM_2, sdef_rarm_l[1].pos.x, sdef_rarm_l[1].pos.y, sdef_rarm_l[1].tile, 0)
            set_oam(SPR_RIGHT_ARM_3, sdef_rarm_l[2].pos.x, sdef_rarm_l[2].pos.y, sdef_rarm_l[2].tile, 0)
            set_oam(SPR_RIGHT_ARM_4, sdef_rarm_l[3].pos.x, sdef_rarm_l[3].pos.y, sdef_rarm_l[3].tile, 0)
            set_oam(SPR_RIGHT_ARM_5, sdef_rarm_l[4].pos.x, sdef_rarm_l[4].pos.y, sdef_rarm_l[4].tile, 0)
            break
        case ARMS_RIGHT
            //draw left leg up and right leg down
            //index, x, y, pal+tile, flags
            set_oam(SPR_LEFT_LEG_1, sdef_legl_up[0].pos.x, sdef_legl_up[0].pos.y, sdef_legl_up[0].tile, 0)
            set_oam(SPR_LEFT_LEG_2, sdef_legl_up[1].pos.x, sdef_legl_up[1].pos.y, sdef_legl_up[1].tile, 0)
            set_oam(SPR_LEFT_LEG_3, sdef_legl_up[2].pos.x, sdef_legl_up[2].pos.y, sdef_legl_up[2].tile, 0)
            set_oam(SPR_LEFT_LEG_4, sdef_legl_up[3].pos.x, sdef_legl_up[3].pos.y, sdef_legl_up[3].tile, 0)

            set_oam(SPR_RIGHT_LEG_1, sdef_legr_dn[0].pos.x, sdef_legr_dn[0].pos.y, sdef_legr_dn[0].tile, 0)
            set_oam(SPR_RIGHT_LEG_2, sdef_legr_dn[1].pos.x, sdef_legr_dn[1].pos.y, sdef_legr_dn[1].tile, 0)
            set_oam(SPR_RIGHT_LEG_3, sdef_legr_dn[2].pos.x, sdef_legr_dn[2].pos.y, sdef_legr_dn[2].tile, 0)
            set_oam(SPR_RIGHT_LEG_4, sdef_legr_dn[3].pos.x, sdef_legr_dn[3].pos.y, sdef_legr_dn[3].tile, 0)

            //draw arms on right
            set_oam(SPR_LEFT_ARM_1, sdef_larm_r[0].pos.x, sdef_larm_r[0].pos.y, sdef_larm_r[0].tile, 0)
            set_oam(SPR_LEFT_ARM_2, sdef_larm_r[1].pos.x, sdef_larm_r[1].pos.y, sdef_larm_r[1].tile, 0)
            set_oam(SPR_LEFT_ARM_3, sdef_larm_r[2].pos.x, sdef_larm_r[2].pos.y, sdef_larm_r[2].tile, 0)
            set_oam(SPR_LEFT_ARM_4, sdef_larm_r[3].pos.x, sdef_larm_r[3].pos.y, sdef_larm_r[3].tile, 0)
            set_oam(SPR_LEFT_ARM_5, sdef_larm_r[4].pos.x, sdef_larm_r[4].pos.y, sdef_larm_r[4].tile, 0)

            set_oam(SPR_RIGHT_ARM_1, sdef_rarm_r[0].pos.x, sdef_rarm_r[0].pos.y, sdef_rarm_r[0].tile, 0)
            set_oam(SPR_RIGHT_ARM_2, sdef_rarm_r[1].pos.x, sdef_rarm_r[1].pos.y, sdef_rarm_r[1].tile, 0)
            set_oam(SPR_RIGHT_ARM_3, sdef_rarm_r[2].pos.x, sdef_rarm_r[2].pos.y, sdef_rarm_r[2].tile, 0)
            set_oam(SPR_RIGHT_ARM_4, sdef_rarm_r[3].pos.x, sdef_rarm_r[3].pos.y, sdef_rarm_r[3].tile, 0)
            set_oam(SPR_RIGHT_ARM_5, sdef_rarm_r[4].pos.x, sdef_rarm_r[4].pos.y, sdef_rarm_r[4].tile, 0)
            break

//balls are also sprites.
fn redraw_balls()
    if game_state == GAME_STATE_END
        set_oam(SPR_BALL1_1, 0, 0, 0, 0)
        set_oam(SPR_BALL1_2, 0, 0, 0, 0)
        set_oam(SPR_BALL2_1, 0, 0, 0, 0)
        set_oam(SPR_BALL2_2, 0, 0, 0, 0)
        set_oam(SPR_BALL3_1, 0, 0, 0, 0)
        set_oam(SPR_BALL3_2, 0, 0, 0, 0)
    else
        set_oam(SPR_BALL1_1, ball1_positions[ball1.current_pos].x, ball1_positions[ball1.current_pos].y, $0B, 0)
        set_oam(SPR_BALL1_2, ball1_positions[ball1.current_pos].x+4, ball1_positions[ball1.current_pos].y+4, $0D, 0)

        set_oam(SPR_BALL2_1, ball2_positions[ball2.current_pos].x, ball2_positions[ball2.current_pos].y, $0B, 1)
        set_oam(SPR_BALL2_2, ball2_positions[ball2.current_pos].x+4, ball2_positions[ball2.current_pos].y+4, $0D, 1)

        set_oam(SPR_BALL3_1, ball3_positions[ball3.current_pos].x, ball3_positions[ball3.current_pos].y, $01, 3)
        set_oam(SPR_BALL3_2, ball3_positions[ball3.current_pos].x+4, ball3_positions[ball3.current_pos].y+4, $04, 3)
        